name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Run unit tests
      run: |
        uv run pytest tests/unit -v
    
    - name: Run validators tests
      run: |
        uv run pytest tests/unit/test_validators.py -v
    
    - name: Run constants tests
      run: |
        uv run pytest tests/unit/test_constants.py -v

  lint:
    name: lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Check code formatting with black
      run: |
        uv run black --check .
    
    - name: Check imports with isort
      run: |
        uv run isort --check-only .

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install build dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Build package
      run: |
        uv run python -m build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v5
      with:
        name: dist
        path: dist/
